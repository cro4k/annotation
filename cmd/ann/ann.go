// Copyright none
package main

import (
	"fmt"
	"github.com/cro4k/annotation/core"
	"github.com/cro4k/annotation/version"
	"github.com/cro4k/common/args"
	"os"
)

const help = "init:\n" +
	"  Initialize annotation.\n" +
	"  option:\n" +
	"    -o --out: the generated files output dir, default is './annotation'\n" +
	"  Usage: ann init -o annotation\n" +
	"clean:\n" +
	"  Remove all files generated by annotation.\n" +
	"  Usage: ann clean"

func main() {
	kvs, cmds := args.Parse()
	cmd := cmds.Cmd()
	var err error
	var message string
	var ver = fmt.Sprintf("Go annotation generator.\nVersion: %s\nAuthor: github.com/cro4k\n", version.Version)
	switch {
	case kvs.Is("h", "-help") || cmd == "":
		message = ver + "--------------------------------------------------\n" + help
	case cmd == "init":
		err = core.Export(kvs.Val("o", "-out"))
	case cmd == "clean":
		err = core.Clean()
	case cmd == "version":
		message = ver
	}
	if err != nil {
		_, _ = os.Stderr.WriteString(err.Error())
	} else if message != "" {
		_, _ = fmt.Fprintln(os.Stdout, message)
	}
}
